/*
蒜头君有 n 块积木，编号分别为 1 到 n。一开始，蒜头把第 i 块积木放在位置 i。
蒜头君进行 m 次操作，每次操作，蒜头把位置 b 上的积木整体移动到位置 a 上面。
比如 1 位置的积木是 1，2 位置的积木是 2，那么把位置 2 的积木移动到位置 1 后，位置 1 上的积木从下到上依次为 1,2。 
输入格式 
第一行输入2个整数 n,m(1≤n≤10000,0≤m≤10000)。 
接下来m行，每行输入2个整数a,b(1≤a,b≤n)，如果a，b 相等则本次不需要移动。 
输出格式 
输出 n 行，第 i 行输出位置 i 从下到上的积木编号，如果该行没有积木输出一行空行。 
样例输入 
2 2 
1 2 
1 2 
样例输出 
1 2
*/ 
#include<iostream>
#include<vector>
using namespace std;
int main()
{
	int n,m,i,j;
	cin>>n>>m;
	vector <int> array[10001];
	for(i=0;i<=n;i++)
	{
	 	array[i].push_back(i);	
	}
	for(i=0;i<m;i++)
	{
		int a,b;
		cin>>a>>b;
		if(array[b].empty()||a==b)
		continue;
		else
		{
			for(j=0;j<array[b].size();j++)
			{
				array[a].push_back(array[b][j]);
			}
			array[b].clear();
			vector<int>().swap(array[b]);    //清空内存 
		}
	}
	for(i=1;i<=n;i++) 
	{
		if(array[i].empty())
		cout<<endl;
		else
		{
			for(j=0;j<array[i].size();j++)
			{
				if(j==array[i].size()-1)
				cout<<array[i][j]<<endl;
				else
				cout<<array[i][j]<<" ";
			}
		}
	}
} 
